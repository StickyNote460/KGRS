"""
Django settings for KGRS project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kn$v49^!)-5h+m69q)%lo2s)z%ck5@kh=24s0&*qqmf!-o88lb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'recommender.apps.RecommenderConfig', #格式：'应用名.apps.配置函数名'
                                            # 可以按照这个路径找到此函数
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'KGRS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'KGRS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        #为解决SQLite参数限制，使得calculate_and_import_newfield.py运行，添加配置
        # 'OPTIONS': {
        #     'timeout': 30,
        #     # 增大缓存尺寸（单位：页，每页约 1KB）
        #     'cache_size': 10000,
        # }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#########个人添加
# Celery配置
CELERY_BROKER_URL = 'redis://localhost:6379/0' #指定celery的消息代理（任务队列服务器地址）
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'#指定任务结果的存储后端
'''
redis://：协议，表示使用 Redis 作为消息代理。
localhost：Redis 服务器地址（本地 IP）。
6379：Redis 默认端口号。
/0：Redis 数据库编号（0-15），用于隔离不同应用的队列。
/0和/1表示使用 Redis 的不同数据库（类似命名空间），避免任务队列与结果存储冲突。
'''
CELERY_TIMEZONE = 'Asia/Shanghai' #遵循时区 规范：必须使用 IANA 时区数据库支持的名称（如 Asia/Shanghai）
CELERY_BEAT_SCHEDULE = { #定时任务配置
    'update_metrics': {
        'task': 'recommender.tasks.update_metrics', #任务的python路径
        'schedule': 3600,  # 任务执行频率，每小时执行一次
    },
    'nightly_kg_update': {
        'task': 'recommender.features.pipelines.kg_pipeline.full_kg_feature_pipeline',
        'schedule': crontab(hour=3, minute=0),  # 每天凌晨3点
    },
    'hourly_popularity': {
        'task': 'recommender.tasks.update_course_popularity',
        'schedule': crontab(minute=0),  # 每小时
         }
}
'''
配置格式：
CELERY_BEAT_SCHEDULE = {
    '任务唯一标识': {
        'task': '应用路径.任务函数',  # 必须正确
        'schedule': 时间间隔或 crontab对象,
        # 可选参数（如 args、kwargs、options）
    }
}
核心规则：
唯一性：每个任务的键名（如 'update_metrics'）必须唯一。
路径正确：task 字段必须指向实际存在的可导入函数。
'''

# #文心一言给的配置
# CELERY_BROKER_URL = 'redis://localhost:6379/0'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'UTC'

#日志
LOGGING = {
    'version': 1,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': 'import_errors.log',
        },
    },
    'loggers': {
        'import_video_names': {
            'handlers': ['file'],
            'level': 'WARNING',
        },
    },
}